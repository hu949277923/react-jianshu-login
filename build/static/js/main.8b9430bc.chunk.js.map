{"version":3,"sources":["components/SignIn.js","components/SignUp.js","components/App.js","index.js"],"names":["request","axios","create","SignIn","initialValues","email","window","localStorage","getItem","password","isSave","toast","useToast","handleSubmit","values","actions","a","console","log","setItem","post","user","username","catch","title","description","status","duration","isClosable","data","schema","Yup","required","min","onSubmit","validationSchema","props","name","field","form","isInvalid","errors","touched","children","id","placeholder","type","defaultIsChecked","w","mt","bgColor","colorScheme","borderRadius","isLoading","isSubmitting","_hover","SignUp","max","my","mx","fontSize","color","App","useState","setType","h","textAlign","p","boxShadow","transform","isFitted","variant","_focus","onClick","alignItems","flex","py","justify","spacing","size","location","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b9430bc.chunk.js","sourcesContent":["import React, {  } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { FormControl, FormErrorMessage, Input, Button, InputGroup, InputLeftAddon, Stack, useToast, Checkbox } from '@chakra-ui/react';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { AiTwotoneMail } from 'react-icons/ai'\nimport { RiLockPasswordFill } from 'react-icons/ri'\n\nconst request = axios.create({})\n\nfunction SignIn () {\n  // 注册数据\n  const initialValues = {\n    email: window.localStorage.getItem('email') || 'jake@jake.jake',\n    password: window.localStorage.getItem('password') || 'jakejake',\n    isSave: true\n  }\n\n  const toast = useToast()\n  // 点击注册按钮\n  const handleSubmit = async (values, actions) => {\n    console.log(values)\n    if (values.isSave) {\n      window.localStorage.setItem('email', values.email)\n      window.localStorage.setItem('password', values.password)\n    }\n    const { data } = await request.post('http://realworld.api.fed.lagounews.com/api/users/login', {\n      user: {\n        username: \"\", \n        email: values.email, \n        password: values.password\n      }\n    }).catch(() => {\n      toast({\n        title: \"用户登录\",\n        description: \"用户登录失败\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      })\n    })\n    if (\"user\" in data) {\n      toast({\n        title: \"用户登录\",\n        description: \"用户登录成功\",\n        status: \"success\",\n        duration: 9000,\n        isClosable: true,\n      })\n    } \n  }\n\n  // 表单验证\n  const schema = Yup.object({\n    email: Yup.string().email().required('请输入邮箱'),\n    password: Yup.string().min(6, '密码最低为六位数')\n  })\n\n  return <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n    {(props) => (\n        <Form>\n          <Stack>\n            <Field name=\"email\">\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.email && form.touched.email}>\n                  <InputGroup>\n                    <InputLeftAddon children={<AiTwotoneMail />} />\n                    <Input {...field} id=\"email\" placeholder=\"邮箱\" />\n                  </InputGroup>\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.password && form.touched.password}>\n                  <InputGroup>\n                    <InputLeftAddon children={<RiLockPasswordFill />} />\n                    <Input {...field} id=\"password\" type=\"password\" placeholder=\"设置密码\" />\n                  </InputGroup>\n                  <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"isSave\">\n              {({ field, form }) => (\n                <Checkbox {...field} defaultIsChecked>记住我</Checkbox>\n              )}\n            </Field>\n          </Stack>\n          <Button\n            w=\"sm\"\n            mt={4}\n            bgColor=\"blue.400\"\n            colorScheme=\"teal\"\n            borderRadius=\"full\"\n            isLoading={props.isSubmitting}\n            type=\"submit\"\n            _hover={{bgColor: \"blue.500\"}}\n          >\n            登录\n          </Button>\n        </Form>\n      )}\n  </Formik>\n}\n\nexport default SignIn\n","import React, {  } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { FormControl, FormErrorMessage, Input, Button, Box, Link, InputGroup, InputLeftAddon, Stack, useToast } from '@chakra-ui/react';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { FaUserAlt } from 'react-icons/fa'\nimport { AiTwotoneMail } from 'react-icons/ai'\nimport { RiLockPasswordFill } from 'react-icons/ri'\n\nconst request = axios.create({})\n\nfunction SignUp () {\n  // 注册数据\n  const initialValues = {\n    username: 'bill',\n    email: 'hu949277923@163.com',\n    password: 'test123456'\n  }\n\n  const toast = useToast()\n  // 点击注册按钮\n  const handleSubmit = async (values, actions) => {\n    console.log(values)\n    const { data } = await request.post('http://realworld.api.fed.lagounews.com/api/users', {\n      user: {\n        username: values.username,\n        email: values.email,\n        password:values.password\n      }\n    }).catch(() => {\n      toast({\n        title: \"用户注册\",\n        description: \"用户注册失败\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      })\n    })\n    if (\"user\" in data) {\n      toast({\n        title: \"用户注册\",\n        description: \"用户注册成功\",\n        status: \"success\",\n        duration: 9000,\n        isClosable: true,\n      })\n    } \n  }\n\n  // 表单验证\n  const schema = Yup.object({\n    username: Yup.string().max(15, '用户昵称不能大于15').required('请输入用户名'),\n    email: Yup.string().email().required('请输入邮箱'),\n    password: Yup.string().min(6, '密码最低为六位数')\n  })\n\n  return <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n    {(props) => (\n        <Form>\n          <Stack>\n            <Field name=\"username\">\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.username && form.touched.username}>\n                  <InputGroup>\n                    <InputLeftAddon children={<FaUserAlt />} />\n                    <Input {...field} id=\"username\" placeholder=\"您的昵称\" />\n                  </InputGroup>\n                  <FormErrorMessage>{form.errors.username}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"email\">\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.email && form.touched.email}>\n                  <InputGroup>\n                    <InputLeftAddon children={<AiTwotoneMail />} />\n                    <Input {...field} id=\"email\" placeholder=\"邮箱\" />\n                  </InputGroup>\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"password\">\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.password && form.touched.password}>\n                  <InputGroup>\n                    <InputLeftAddon children={<RiLockPasswordFill />} />\n                    <Input {...field} id=\"password\" type=\"password\" placeholder=\"设置密码\" />\n                  </InputGroup>\n                  <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            \n          </Stack>\n          <Button\n            w=\"sm\"\n            mt={4}\n            bgColor=\"green.400\"\n            colorScheme=\"teal\"\n            borderRadius=\"full\"\n            isLoading={props.isSubmitting}\n            type=\"submit\"\n            _hover={{bgColor: \"green.500\"}}\n          >\n            注册\n          </Button>\n          <Box my=\"2\" mx=\"auto\" w=\"50%\" fontSize=\"12\" colorScheme=\"blue\">\n            点击注册即表示您统一并愿意遵循简书\n            <Link color=\"blue.400\">用户协议</Link>\n            和\n            <Link color=\"blue.400\">隐私政策</Link>\n          </Box>\n        </Form>\n      )}\n  </Formik>\n}\n\nexport default SignUp\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Tab,\n  TabPanel,\n  Tabs,\n  TabList,\n  TabPanels,\n  Text,\n  Flex,\n  Divider,\n  HStack,\n} from \"@chakra-ui/react\";\nimport { AiOutlineWeibo, AiOutlineWechat, AiOutlineQq } from \"react-icons/ai\";\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\n\nfunction App() {\n  // 0 登录 1 注册\n  const [type, setType] = useState(0);\n\n  const AuthWeChat = () => {\n    window.location.href = 'https://www.jianshu.com/users/auth/wechat'\n  }\n\n  const AuthQq = () => {\n    window.location.href = 'https://www.jianshu.com/users/auth/qq_connect'\n  }\n\n  return (\n    <Box w=\"100vw\" h=\"100vh\" textAlign=\"center\" bgColor=\"gray.100\">\n      <Box w=\"480px\" h=\"100vh\" mx=\"auto\">\n        <Box\n          p={6}\n          bgColor=\"white\"\n          mx=\"auto\"\n          borderRadius=\"lg\"\n          boxShadow=\"lg\"\n          transform=\"translateY(10vh)\"\n        >\n          <Tabs isFitted variant=\"line\" colorScheme=\"red\">\n            <TabList mx=\"auto\" w=\"60%\">\n              <Tab _focus={{ boxShadow: \"none\" }} onClick={() => setType(0)}>\n                登录\n              </Tab>\n              <Tab _focus={{ boxShadow: \"none\" }} onClick={() => setType(1)}>\n                注册\n              </Tab>\n            </TabList>\n            <TabPanels>\n              <TabPanel>\n                <SignIn />\n              </TabPanel>\n              <TabPanel>\n                <SignUp />\n              </TabPanel>\n            </TabPanels>\n            <Flex mx=\"auto\" w=\"80%\" alignItems=\"center\" color=\"gray.400\">\n              <Box flex=\"1\">\n                <Divider />\n              </Box>\n              <Box flex=\"1\">\n                <Text fontSize=\"12px\">\n                  社交账号{type === 0 ? \"登录\" : \"直接注册\"}\n                </Text>\n              </Box>\n              <Box flex=\"1\">\n                <Divider />\n              </Box>\n            </Flex>\n            <HStack py={4} mx=\"auto\" justify=\"center\" spacing={8}>\n              {type === 0 ? (\n                <Box>\n                  <AiOutlineWeibo color=\"#e05244\" size=\"30\" />\n                </Box>\n              ) : (\n                \"\"\n              )}\n              <Box>\n                <AiOutlineWechat onClick={AuthWeChat} color=\"#00bb29\" size=\"30\" />\n              </Box>\n              <Box>\n                <AiOutlineQq onClick={AuthQq} color=\"#498ad5\" size=\"30\" />\n              </Box>\n            </HStack>\n          </Tabs>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/react';\nimport App from './components/App';\n\nReactDOM.render(\n  <ChakraProvider >\n    <CSSReset />\n    <App />\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}